{"version":3,"file":"static/js/513.4bdec36b.chunk.js","mappings":"gHAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,+KClCMC,EAAW,+BACXC,EAAM,mCAECC,EAAY,kCAAlB,SAEQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMpB,QAAQT,OAAO,IAAI8B,MAAM,aAJ/B,2GAOO,SAASC,IACd,OAAOR,EAAuB,GAAD,OAAIH,EAAJ,qCAAyCC,GACvE,CAEM,SAASW,EAAcC,GAC5B,OAAOV,EAAuB,GAAD,OACxBH,EADwB,kBACNa,EADM,oBACaZ,EADb,mBAG9B,CAEM,SAASa,EAAiBC,GAC/B,OAAOZ,EAAuB,GAAD,OACxBH,EADwB,iCACSC,EADT,kBACsBc,EADtB,8CAG9B,CAEM,SAASC,EAAeH,GAC7B,OAAOV,EAAuB,GAAD,OACxBH,EADwB,kBACNa,EADM,4BACqBZ,EADrB,mBAG9B,CAEM,SAASgB,EAAkBJ,GAChC,OAAOV,EAAuB,GAAD,OACxBH,EADwB,kBACNa,EADM,4BACqBZ,EADrB,mBAG9B,C,2FCrCD,GAAiB,E,SC8BjB,EA1BsB,SAAC,GAAgB,IAAdiB,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAAA,cAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAAAA,WAA9B,UACE,UAAC,KAAD,CACEG,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMV,IAHnB,WAME,gBACEW,IAAK5B,EAAAA,GAAYsB,EAAMO,YACvBC,IAAKR,EAAMS,MACXZ,UAAWC,EAAAA,eACXY,MAAO,OAET,cAAGb,UAAWC,EAAAA,gBAAd,SAAsCE,EAAMS,YAbvCT,EAAMG,GADA,KAoBtB,C,6HCxBc,SAASQ,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACR3B,EAAAA,EAAAA,MAAsBrB,MAAK,SAAAiD,GAAO,OAAIF,EAAUE,EAAQC,QAAtB,GACnC,GAAE,KAID,iCACE,4CAEA,SAAC,IAAD,CAAetB,OAAQA,MAG5B,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Components/Api/fetch.js","Components/MoviesGallery/MoviesGallery.module.css","Components/MoviesGallery/MoviesGallery.jsx","Components/Pages/Home/Home.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '543844f1638a5c7bfa18719dc8b6440a';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not fond'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n}\n\nexport function fetchMoviesId(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieSearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from '../Api/fetch';\nimport style from './MoviesGallery.module.css';\n\nconst MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={style.MoviesGallery}>\n      {movies.map(movie => (\n        <li key={movie.id} className={style.MoviesItem}>\n          <Link\n            to={{\n              pathname: `/movies/${movie.id}`,\n              state: { from: location },\n            }}\n          >\n            <img\n              src={IMAGE_URL + movie.poster_path}\n              alt={movie.title}\n              className={style.MoviesItem_img}\n              width={400}\n            />\n            <p className={style.MoviesItem_text}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesGallery;\n","import { useState, useEffect } from 'react';\nimport MoviesGallery from '../../MoviesGallery/MoviesGallery';\nimport { fetchTrendingMovies } from '../../Api/fetch';\nimport '../../../styles.css';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(request => setMovies(request.results));\n  }, []);\n\n  // console.log(movies);\n  return (\n    <>\n      <h1>Trending today</h1>\n\n      <MoviesGallery movies={movies} />\n    </>\n  );\n}\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","KEY","IMAGE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Error","fetchTrendingMovies","fetchMoviesId","movieId","fetchMovieSearch","query","fetchMovieCast","fetchMovieReviews","movies","location","useLocation","className","style","map","movie","to","pathname","id","state","from","src","poster_path","alt","title","width","Home","useState","setMovies","useEffect","request","results"],"sourceRoot":""}